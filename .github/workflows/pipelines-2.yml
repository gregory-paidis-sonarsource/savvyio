name: Savvyi I/O Pipeline (normal scan)
on:
  push:
    branches: [main]
    paths-ignore:
      - .codecov/**
      - .docfx/**
      - .github/**
      - .nuget/**
      - '**.md'
  pull_request:
    branches: [main]
    paths-ignore:
      - .codecov/**
      - .docfx/**
      - .github/**
      - .nuget/**
      - '**.md'
  workflow_dispatch:
    inputs:
      configuration:
        type: choice
        description: The build configuration to use in the deploy stage.
        required: true
        default: Release
        options:
          - Debug
          - Release


jobs:
  prepare:
    name: üß∞ Prepare
    runs-on: ubuntu-22.04
    outputs:
      testProjects: ${{ steps.test-projects.outputs.result }}
    steps:
      - name: Checkout
        uses: codebeltnet/git-checkout@v1

      - id: test-projects
        name: Generate matrix for test projects
        uses: codebeltnet/shell-globbing@v1
        with:
          pattern: test/**/*.csproj

  build:
    name: üõ†Ô∏è Build
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        configuration: [Debug, Release]
        framework: [net8.0, net6.0]
    outputs:
      version: ${{ steps.minver-calculate.outputs.version }}
    steps:
      - name: Checkout
        uses: codebeltnet/git-checkout@v1

      - name: Install .NET
        uses: codebeltnet/install-dotnet@v1

      - name: Install MinVer
        uses: codebeltnet/dotnet-tool-install-minver@v1

      - id: minver-calculate
        name: Calculate Version
        uses: codebeltnet/minver-calculate@v2

      - name: Restore Dependencies
        uses: codebeltnet/dotnet-restore@v2

      - name: Build for ${{ matrix.framework }} (${{ matrix.configuration }})
        uses: codebeltnet/dotnet-build@v2
        with:
          configuration: ${{ matrix.configuration }}
          framework: ${{ matrix.framework }}

  sonarcloud:
    name: üî¨ Code Quality Analysis
    needs: [build]
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: codebeltnet/git-checkout@v1

      - name: 6.0.x
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 6.0.x
      - name: 8.0.x
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        run: |
          mkdir -p .sonar/scanner
          dotnet tool install dotnet-sonarscanner --tool-path .sonar/scanner --version 7.1.1

      - name: Restore Dependencies
        uses: codebeltnet/dotnet-restore@v2

      - name: Run SonarCloud Analysis
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          ./.sonar/scanner/dotnet-sonarscanner begin /k:"denis-troller_savvyio" /o:"denis-troller" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.exclusions="**/obj/**,**/bin/**" /d:sonar.sources="src/" /d:sonar.tests="test/"
          dotnet build
          ./.sonar/scanner/dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

  codeql:
    name: üõ°Ô∏è Security Analysis
    needs: [build]
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: codebeltnet/git-checkout@v1

      - name: Install .NET
        uses: codebeltnet/install-dotnet@v1

      - name: Restore Dependencies
        uses: codebeltnet/dotnet-restore@v2

      - name: Prepare CodeQL SAST Analysis
        uses: codebeltnet/codeql-scan@v1

      - name: Build
        uses: codebeltnet/dotnet-build@v2
        with:
          buildSwitches: -p:SkipSignAssembly=true
          uploadBuildArtifact: false

      - name: Finalize CodeQL SAST Analysis
        uses: codebeltnet/codeql-scan-finalize@v1


